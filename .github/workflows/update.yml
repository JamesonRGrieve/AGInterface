name: Push Main Branch to Target Repository

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  push-main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4

      - name: Push to target repository
        env:
          TARGET_REPO: ${{ secrets.SECRET_TARGET }}
          GITHUB_TOKEN: ${{ secrets.SECRET_PAT }}
        run: |
          # Extract org/repo if full URL was provided
          if [[ "$TARGET_REPO" == *"github.com"* ]]; then
            TARGET_REPO=$(echo "$TARGET_REPO" | sed 's/.*github.com[\/:]\(.*\)\.git*/\1/' | sed 's/\.git$//')
          fi

          # Clean repository name
          TARGET_REPO=$(echo "$TARGET_REPO" | sed 's/\.git$//')
          IFS='/' read -r org repo <<< "$TARGET_REPO"

          echo "Using target: ${org}/${repo}"

          # Function to create blob
          create_blob() {
            local content=$1
            local encoding=${2:-utf-8}
            curl -s -X POST -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${TARGET_REPO}/git/blobs" \
              -d "{\"content\":\"$content\",\"encoding\":\"${encoding}\"}"
          }

          # Get current commit SHA
          BASE_TREE=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            "https://api.github.com/repos/${TARGET_REPO}/git/refs/heads/main" | \
            jq -r '.object.sha')

          if [ -z "$BASE_TREE" ] || [ "$BASE_TREE" = "null" ]; then
            echo "Could not get base tree. Creating initial commit..."
            # Create an empty tree for initial commit
            TREE_SHA=$(curl -s -X POST -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${TARGET_REPO}/git/trees" \
              -d '{"tree":[]}' | jq -r '.sha')
          else
            TREE_SHA=$BASE_TREE
          fi

          # Create new tree
          NEW_TREE=$(curl -s -X POST -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${TARGET_REPO}/git/trees" \
            -d "{\"base_tree\":\"${TREE_SHA}\",\"tree\":[]}")

          NEW_TREE_SHA=$(echo "$NEW_TREE" | jq -r '.sha')

          # Create new commit
          NEW_COMMIT=$(curl -s -X POST -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${TARGET_REPO}/git/commits" \
            -d "{\"message\":\"Update from action\",\"tree\":\"${NEW_TREE_SHA}\",\"parents\":[\"${BASE_TREE}\"]}")

          NEW_COMMIT_SHA=$(echo "$NEW_COMMIT" | jq -r '.sha')

          # Update reference
          UPDATE_REF=$(curl -s -X PATCH -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${TARGET_REPO}/git/refs/heads/main" \
            -d "{\"sha\":\"${NEW_COMMIT_SHA}\",\"force\":true}")

          if echo "$UPDATE_REF" | jq -e '.ref' > /dev/null; then
            echo "Successfully pushed to ${TARGET_REPO}"
          else
            echo "Failed to push. API Response:"
            echo "$UPDATE_REF" | jq '.'
            exit 1
          fi
