name: Push Main Branch to Target Repository

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  push-main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Push main to target repository
        env:
          TARGET_REPO: ${{ secrets.SECRET_TARGET }}
          GITHUB_TOKEN: ${{ secrets.SECRET_PAT }}
        run: |
          # Extract org/repo if full URL was provided
          if [[ "$TARGET_REPO" == *"github.com"* ]]; then
            TARGET_REPO=$(echo "$TARGET_REPO" | sed 's/.*github.com[\/:]\(.*\)\.git*/\1/' | sed 's/\.git$//')
          fi

          # Remove any trailing .git if present
          TARGET_REPO=$(echo "$TARGET_REPO" | sed 's/\.git$//')

          echo "Using repository: ${TARGET_REPO}"

          # First test API access
          echo "Testing API access..."
          REPO_TEST=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            https://api.github.com/repos/${TARGET_REPO})

          # Show repository visibility from API (if accessible)
          echo "Repository check:"
          echo "$REPO_TEST" | grep -i "visibility" || echo "Could not get repository info"

          # Add the target repository as a remote using simple token auth
          echo "Adding remote..."
          REMOTE_URL="https://${GITHUB_TOKEN}@github.com/${TARGET_REPO}.git"
          git remote add target "$REMOTE_URL"

          # Enable trace for git commands
          set -x

          # Try to fetch first to verify access
          git fetch target || exit 1

          # Print remotes (safely)
          git remote -v | sed 's/https:\/\/.*@/https:\/\/***@/'

          # Push only the main branch
          echo "Pushing to main branch..."
          git push target main:main

          set +x
