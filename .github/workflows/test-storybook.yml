name: Compare Pytest Results Between Branches

on:
  workflow_call:
  pull_request:
    branches:
      - dev
jobs:
  lint:
    uses: ./.github/workflows/test-lint.yml
    permissions:
      contents: write

  sync-linting-files:
    needs: lint
    uses: ./.github/workflows/submodules.yml
    with:
      file_paths: '.prettierrc.json,.eslintrc.json,.eslintignore,tsconfig.json'
      commit_message: 'sync: update linting and TypeScript configuration files'
    permissions:
      contents: write

  sync-styling-files:
    needs: lint
    uses: ./.github/workflows/submodules.yml
    with:
      file_paths: 'tailwind.config.js,postcss.config.js,components.json'
      ignore_submodules: 'zod2gql,next-log'
      commit_message: 'sync: update UI styling and component configuration files'
    permissions:
      contents: write

  sync-build-nextjs-files:
    needs: lint
    uses: ./.github/workflows/submodules.yml
    with:
      file_paths: 'next.config.js,server-wrapper.js,.dockerignore,Dockerfile,env.sh'
      ignore_submodules: 'zod2gql,next-log,dynamic-form,appwrapper,auth'
      commit_message: 'sync: update Next.js and deployment configuration files'
    permissions:
      contents: write

  lint-again:
    uses: ./.github/workflows/test-lint.yml
    needs: [sync-linting-files, sync-styling-files, sync-build-nextjs-files]

    permissions:
      contents: write

  test:
    needs: [lint-again]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v4.2.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Storybook
        run: npm run storybook &

      - name: Wait for Storybook to be ready
        run: |
          echo "Waiting for Storybook to start..."
          # Try to connect to Storybook for up to 60 seconds
          timeout=60
          counter=0
          until $(curl --output /dev/null --silent --head --fail http://localhost:3001); do
            if [ $counter -eq $timeout ]; then
              echo "Timed out waiting for Storybook to start"
              exit 1
            fi
            echo "Waiting for Storybook... ($counter seconds so far)"
            sleep 5
            counter=$((counter + 5))
          done
          echo "Storybook is up and running!"

      - name: Run Storybook tests
        run: npm run storybook-test

      # Optional: Collect and upload test coverage
      # - name: Collect coverage
      #   run: npx nyc report
      #   if: always()
      #   continue-on-error: true

      # Upload artifacts if tests fail
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: storybook-test-results
          path: |
            ./*-snapshots/
            ./coverage/
          retention-days: 7
